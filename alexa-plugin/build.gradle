import java.nio.file.Paths

group 'org.rewedigital.voice.dialog'
version rootProject.ext.versions.alexa
description = 'The Alexa plugin for Dialog to write voice applications for Dialogflow and Alexa.'

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply from: '../docu.gradle'
apply plugin: 'com.novoda.bintray-release'

dependencies {
    //implementation project(":core")
    implementation "org.rewedigital.voice:dialog:1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.amazon.alexa:ask-sdk-core:2.11.2"
}

dokka {
    externalDocumentationLink {
        url = new URL("https://github.com/rewe-digital-incubator/${rootProject.name}/blob/master/docs/core/")
        packageListUrl = Paths.get("$rootDir/docs/core/package-list").toUri().toURL()
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier = 'javadoc'
    from "$buildDir/javadoc"
}

publishing.publications {
    alexaPlugin(MavenPublication) {
        groupId = project.group
        artifactId = project.name
        from components.java
        version = project.version
        artifact sourcesJar {
            archiveClassifier = 'sources'
        }
        artifact javadocJar {
            archiveClassifier = 'javadoc'
        }
        pom {
            name = project.name
            description = project.description
            url = "https://github.com/rewe-digital-incubator/${rootProject.name}"
            licenses {
                license {
                    name = 'MIT License'
                    url = 'https://opensource.org/licenses/MIT'
                    distribution = 'repo'
                }
            }
            developers {
                def maintainers = [:]
                file("$rootDir/MAINTAINERS").text.eachLine { line ->
                    def (name, mail) = line.split('<')
                    maintainers[name.trim()] = mail.replace('>','').trim()
                }
                maintainers.entrySet().forEach { dev ->
                    developer {
                        name = dev.key
                        email = dev.value
                    }
                }
            }

            scm {
                connection = "scm:git:git://github.com/rewe-digital-incubator/${rootProject.name}.git"
                developerConnection = "scm:git:git://github.com/rewe-digital-incubator/${rootProject.name}.git"
                url = "https://rewe-digital-incubator.github.io/${rootProject.name}/"
            }
        }
    }
}

publish {
    userOrg = 'rewe-digital'
    groupId = project.group
    artifactId = project.name
    repoName = rootProject.name
    publishVersion = project.version
    desc = project.description
    bintrayUser = project.properties['bintray.user']
    bintrayKey = project.properties['bintray.apikey']
    dryRun = true
    publications = ['alexaPlugin']
}

allprojects {
    afterEvaluate { project ->
        project.publishing.publications.forEach { publication ->
            if(publication.name == 'maven') {
                project.publishing.publications.remove(publication)
            }
        }
    }
}